{"version":3,"sources":["components/footer/footer.tsx","components/pages/announce.tsx","components/pages/vacancies.tsx","components/pages/position.tsx","components/pages/testing.tsx","components/screens/calendar.js","components/screens/dropdown.tsx","components/pages/schedule.tsx","components/screens/feedback.tsx","components/screens/sent.tsx","components/screens/wait.tsx","components/pages/modal.tsx","components/main/main.tsx","components/header/header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","data","useState","checked","setChecked","className","src","alt","Rights1","Rights2","Contacts","Address","Phone1","Phone2","Mail","CallMe","type","placeholder","onChange","e","target","Accept","href","PersonalData","Announce","Name","Heading","Paragraph1","Paragraph2","BannerHeading","BannerText","id","BannerButton","Column1Title","Column1Text","Column2Title","Column2Text","Column3Title","Column3Text","Column4Title","Column4Text","Vacancies","text","openModal","Positions","Object","values","map","item","index","Join","Plan","Step1","Step2","Step3","Question","Answer","onClick","Button","Position","listItems","split","array","length","IncomeLabel","IncomeText","ExperienceLabel","ExperienceText","ScheduleLabel","ScheduleText","TaskLabel","TaskList","ExpectationsLabel","ExpectationsList","SpecialsLabel","SpecialsList","BannerLabel","BannerList","ButtonLabel","Testing","style","setStyle","dropdown","setDropdown","dropoption","setDropoption","container","React","useRef","selectedValue","setSelectedValue","userphone","setUserphone","name","cvs","useEffect","mousedownEvent","event","current","contains","document","addEventListener","removeEventListener","Description","Text","InputGreetingLabel","InputGreetingPlaceholder","InputEmailLabel","InputEmailPlaceholder","InputPhoneLabel","InputPhonePlaceholder","value","val","replace","slice","num","substring","trim","InputCvLabel","InputCvPlaceholder","tabIndex","ref","i","htmlFor","ButtonUpload","InputPlaceholder","ButtonPost","ButtonLabelPost","DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","areEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","getDay","getDayOfWeek","day","j","undefined","Calendar","setDate","currentDate","yearSelect","setYearSelect","monthSelect","setMonthSelect","handleSelectChange","newdate","monthNames","monthData","toLocaleDateString","element","week","classnames","handleDayClick","Dropdown","options","placeholderName","toString","Schedule","timeSlots","SelectDay","SelectTime","From","Until","SelectPersonal","InputNameLabel","InputNamePlaceholder","InputMessengersLabel","InputSkypePlaceholder","InputZoomPlaceholder","InputOthersLabel","InputOthersPlaceholder","Feedback","onClose","NameLabel","NamePlaceholder","required","EmailLabel","EmailPlaceholder","QuestionLabel","QuestionPlaceholder","Sent","Wait","Modal","show","label","chooseModal","ModalType","stopPropagation","Main","pageData","setShow","showModal","modalName","body","classList","add","remove","Header","languages","keys","lang","setLang","iteration","App","JsonData","Languages","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cfe09460.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faYoutube, faTwitter, faFacebookSquare } from '@fortawesome/free-brands-svg-icons';\n\ninterface Model {\n    data: {\n        [key: string]: string;\n    };\n}\n\n//<FontAwesomeIcon icon={faTwitter} />\n//<FontAwesomeIcon icon={faFacebookSquare} />\n//<FontAwesomeIcon icon={faYoutube} />\n\nexport function Footer({ data }: Model) {\n    \n    const [checked, setChecked] = useState(false);\n    \n\n    return (\n        <div className=\"footer\">\n            <div className=\"footer-wrapper\">\n                <div className=\"footer-column footer-column-logo\">\n                    <img className=\"footer-logo\" src=\"/img/itexpert-logo-blue.svg\" alt=\"logo\" />\n                    <p>{data.Rights1}</p>\n                    <p>{data.Rights2}</p>\n                </div>\n                <div className=\"footer-column footer-column-address\">\n                    <h3>{data.Contacts}</h3>\n                    <p>{data.Address}</p><br />\n                    <p>{data.Phone1}</p>\n                    <p>{data.Phone2}</p><br />\n                    <p><span>{data.Mail}</span></p>\n                </div>\n                <div className=\"footer-column footer-column-feedback\">\n                    <h3>{data.CallMe}</h3>\n                    <form className=\"footer-form\">\n                        <div className=\"input-icons\">\n                            <img src=\"/img/icon-arrow.svg\" alt=\"arrow\" />\n                        </div>\n                        <input className=\"footer-input\" type=\"text\" placeholder=\"+7(___)___-__-__\" />\n                        <div>\n                            <label className=\"checkcontainer\">\n                                <input type=\"checkbox\" checked={checked} \n                                onChange={e => setChecked(e.target.checked)}/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                            <div className=\"footer-confirmation\">\n                                <p className=\"footer-column-accept\">{data.Accept}</p>\n                                <a className=\"footer-column-personal\" href=\"#\"><span>{data.PersonalData}</span></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"footer-column footer-column-socials\">\n                    <img src=\"/img/logo-twitter.svg\" alt=\"logo\" />\n                    <img src=\"/img/logo-facebook.svg\" alt=\"logo\" />\n                    <img src=\"/img/logo-youtube.svg\" alt=\"logo\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\n","//import imgHandshake from \"/img/announce-handshake.svg\"\n\ninterface Model {\n    data: {\n        [key: string]: string;\n    };\n}\n\nexport function Announce({ data }: Model) {\n    return (\n        <div className=\"main-page announce\">\n            <div className=\"presentation\">\n                <div className=\"presentation-card\">\n                    <h1><span>{data.Name}</span>{data.Heading}</h1>\n                    <div className=\"presentation-info\">\n                        <p>{data.Paragraph1}</p><br />\n                        <p>{data.Paragraph2}</p>\n                    </div>\n                </div>\n                {/*\"/img/announce-handshake.svg\"*/}\n                <img className=\"presentation-about-img\" src=\"/img/announce-about.svg\" alt=\"handshake\" />\n                <div className=\"presentation-banner\">\n                    <img src=\"/img/announce-handshake.svg\" alt=\"handshake\" />\n                    <h1>{data.BannerHeading}</h1>\n                    <p className=\"banner-text\">{data.BannerText}</p>\n                    <button className=\"button-blue\" id=\"buttonConfirmAnnounce\"><p>{data.BannerButton}</p></button>\n                </div>\n            </div>\n\n            <div className=\"pros\">\n                <div className=\"pros-wrapper\">\n                    <div className=\"pros-column\">\n                        <img src=\"/img/icon-care.svg\" alt=\"care\" />\n                        <h1>{data.Column1Title}</h1>\n                        <p>{data.Column1Text}</p>\n                    </div>\n                    <div className=\"pros-column\">\n                        <img src=\"/img/icon-like.svg\" alt=\"like\" />\n                        <h1>{data.Column2Title}</h1>\n                        <p>{data.Column2Text}</p>\n                    </div>\n                    <div className=\"pros-column\">\n                        <img src=\"/img/icon-star.svg\" alt=\"star\" />\n                        <h1>{data.Column3Title}</h1>\n                        <p>{data.Column3Text}</p>\n                    </div>\n                    <div className=\"pros-column\">\n                        <img src=\"/img/icon-smile.svg\" alt=\"smile\" />\n                        <h1>{data.Column4Title}</h1>\n                        <p>{data.Column4Text}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","\ninterface Model {\n    data: {\n        [key: string]: any;\n    },\n    openModal: any;\n}\n\nexport function Vacancies({ data, openModal }: Model) {\n    function listItems (text: object) {\n        return Object.values(text).map((item:string, index:number) => <li key={index}>{item}</li>);\n    }\n\n    return (\n        <div className=\"main-page vacancies\">\n            <div className=\"vacancies-wrapper\">\n                <div className=\"vacancies-nav\">\n                    <div className=\"vacancies-nav-wrapper\">\n                        <p>{data.Heading}</p>\n                        <ul>\n                            {listItems(data.Positions)}\n                        </ul>\n                    </div>\n                    <img src=\"/img/vacancies-hand.svg\" alt=\"vacancies\" />\n                </div>\n                <div className=\"vacancies-plan\">\n                    <div className=\"vacancies-plan-greeting\">\n                        <h1>{data.Join}</h1>\n                        <p>{data.Plan}</p>\n                    </div>\n                    <div className=\"vacancies-steps\">\n                        <div className=\"vacancies-column\">\n                            <img src=\"/img/icon-eye.svg\" alt=\"icon\" />\n                            <p><span>1. </span>{data.Step1}</p>\n                        </div>\n                        <div className=\"vacancies-column\">\n                            <img src=\"/img/icon-note.svg\" alt=\"icon\" />\n                            <p><span>2. </span>{data.Step2}</p>\n                        </div>\n                        <div className=\"vacancies-column\">\n                            <img src=\"/img/icon-clock.svg\" alt=\"icon\" />\n                            <p><span>3. </span>{data.Step3}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"vacancies-ask\">\n                        <div className=\"vacancies-ask-info\">\n                            <h2>{data.Question}</h2>\n                            <p>{data.Answer}</p>\n                        </div>\n                        <button className=\"button-blue\" id=\"buttonConfirmVacancies\" onClick={()=>openModal(\"Feedback\")}><p>{data.Button}</p></button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\n\n\n","import { isArrayLiteralExpression } from \"typescript\";\n\ninterface Model {\n    data: {\n        [key: string]: string;\n    };\n}\n\nexport function Position({ data }: Model) {\n\n    function listItems (text: string) {\n        return text.split('; ').map((item:string, index:number, array: string[]) => <li key={index}>{item}{(index < array.length-1)?\";\":\"\"}</li>);\n    }\n\n    return (\n        <div className=\"main-page position\">\n            <div className=\"position-subheader\">\n                <div className=\"position-subheader-wrapper\">\n                    <h1>{data.Heading}</h1>\n                    <div className=\"position-subheader-table\">\n                        <div className=\"position-subheader-column\">\n                            <p>{data.IncomeLabel}</p>\n                            <h1>{data.IncomeText}</h1>\n                        </div>\n                        <div className=\"position-subheader-column\">\n                            <p>{data.ExperienceLabel}</p>\n                            <h1>{data.ExperienceText}</h1>\n                        </div>\n                        <div className=\"position-subheader-column\">\n                            <p>{data.ScheduleLabel}</p>\n                            <h1>{data.ScheduleText}</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"position-body\">\n                <div className=\"position-body-wrapper\">\n                    <div className=\"position-about\">\n                        <p>{data.TaskLabel}</p>\n                        <ul>\n                            {listItems(data.TaskList)}\n                        </ul>\n                        <p>{data.ExpectationsLabel}</p>\n                        <ul>\n                            {listItems(data.ExpectationsList)}\n                        </ul>\n                        <p>{data.SpecialsLabel}</p>\n                        <ul className=\"position-specials\">\n                            {listItems(data.SpecialsList)}\n                        </ul>\n                    </div>\n                    <div className=\"position-banner\">\n                        <p>{data.BannerLabel}</p>\n                        <ul>\n                            {listItems(data.BannerList)}\n                        </ul>\n                        <img src=\"/img/vacancies-hand.svg\" alt=\"vacancies\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"button-block\">\n                <button className=\"button-blue\" id=\"buttonConfirmScreening\"><p>{data.Button}</p></button>\n                <label className=\"desc-label\">{data.ButtonLabel}</label>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\n\ninterface Model {\n    data: {\n        [key: string]: string;\n    },\n    openModal: any;\n}\n\nexport function Testing({ data, openModal }: Model) {\n\n    const initialCvs = [\n        {id: \"Frontend\", name: \"Фронтенд\"},\n        {id: \"DataAnalyst\", name: \"Аналитик\"},\n        {id: \"CDeveloper\", name: \"Разработчик С\"}\n    ]\n\n    // STYLE: 0 = Initial, 1 = File form\n    const [style, setStyle] = useState(0);\n    const [dropdown, setDropdown] = useState(false);\n    const [dropoption, setDropoption] = useState(\"\");\n    const container = React.useRef<HTMLUListElement>(null);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n    const [userphone, setUserphone] = useState(\"\");\n    const [cvs, setCvs] = useState([...initialCvs]);\n\n// dropdown //\n    useEffect(() => {\n        function mousedownEvent(event: any) {\n          if (container.current && !container.current.contains(event.target)) {\n            setDropdown(false);\n          }\n        }\n        document.addEventListener('mousedown', mousedownEvent)\n        return () => {\n          document.removeEventListener('mousedown', mousedownEvent)\n        }\n    }, [])\n    \n    function toggleOptions(e?: any):void {\n        if (dropdown == false) {\n            setDropdown(true);\n        }\n    }\n    function selectOption(value: string):void {\n        setDropoption(value);\n        setSelectedValue(value);\n        setDropdown(false);\n    }\n// dropdown / //\n\n    const changephone = (event: any) => {\n        if (event.target.value.length <= 18) {\n            let val = event.target.value;\n            val = val.replace(/ |\\(|\\)|\\+/gm, '')\n            if (val.length > 1) {\n                val = val.slice(1, val.length)\n                };\n            let num = (val.length > 3\n                ? `+7 (${val.substring(0, 3)}) ${val.substring(3, 6)} ${val.substring(6, 8)} ${val.substring(8, val.length)}`\n                : `+7 (${val.substring(0, 3)}`)\n            num = num.trim();\n            if (num.length > userphone.length && num != \"+7 (7\") {\n                setUserphone(num)\n            } else {\n                    setUserphone(userphone.slice(0, userphone.length-1).trim())\n            }\n        }\n    }\n\n    return (\n        <div className=\"main-page testing\">\n            \n            {(!style) ? (\n\n                // Initial style\n                <div className=\"main-page-wrapper\">\n                    <h1>{data.Heading}</h1>\n                    <div className=\"testing-screen-1\">\n                        <p className=\"desc-label\">{data.Description}</p>\n                        <p className=\"testing-text\">{data.Text}</p>\n                        <label htmlFor=\"inputEmailTest\" className=\"testing-email\">{data.InputEmailLabel}<span>*</span></label>\n                        <input placeholder={data.InputEmailPlaceholder} id=\"inputEmailTest\" type=\"text\" />\n                    </div>\n                    <div className=\"button-block\">\n                        <button className=\"button-blue\" id=\"buttonConfirmTest\"  onClick={()=>{openModal(\"Sent\"); setStyle(1)}}><p>{data.Button}</p></button>\n                        <label className=\"desc-label\">{data.ButtonLabel}</label>\n                    </div>\n                </div>\n\n                 ) : (\n\n                // Form style\n                <div className=\"main-page-wrapper\">\n                    <h1>{data.Heading}</h1>\n                    <div className=\"testing-columns\">\n                        <div className=\"testing-presentation\">\n                            <p className=\"desc-label\">{data.Description}</p>\n                            <p className=\"testing-text\">{data.Text}</p>\n                        </div>\n                        <div className=\"testing-form\">\n                            <form>\n                                <div className=\"testing-form-item\">\n                                    <label className=\"testing-input\">{data.InputGreetingLabel}<span>*</span></label>\n                                    <input placeholder={data.InputGreetingPlaceholder} id=\"inputEmailName\" type=\"text\" />\n                                </div>\n                                <div className=\"testing-form-item testing-form-email\">\n                                    <label className=\"testing-input\">{data.InputEmailLabel}<span>*</span></label>\n                                    <input placeholder={data.InputEmailPlaceholder} id=\"inputEmailTest\" type=\"text\" />\n                                </div>\n                                <div className=\"testing-form-item testing-form-phone\">\n                                    <label className=\"testing-input\">{data.InputPhoneLabel}<span>*</span></label>\n                                    <input placeholder={data.InputPhonePlaceholder} id=\"inputEmailPhone\" type=\"text\" value={userphone} onChange={changephone} />\n                                </div>\n                                <div className=\"testing-form-item testing-form-cv\">\n                                    <label className=\"testing-input\">{data.InputCvLabel}<span>*</span></label>\n                                    <div className=\"dropdown-container\">\n                                        <input name=\"select_value\" type=\"hidden\" id=\"selectedValue\" value={selectedValue} />\n                                        <div className=\"display-value\" id=\"displayValue\" onClick={toggleOptions}>\n                                            <p className=\"value-text\" id=\"valueText\">{dropoption?dropoption:data.InputCvPlaceholder}</p>\n                                            <img className=\"footer-logo\" src=\"/img/icon-chevron.svg\" alt=\"arrow\" />\n                                        </div>\n                                        <ul tabIndex={0} className={\"select-container \" + (!!dropdown ? \"\" : \"hidden\") } id=\"selectContainer\" ref={container}>\n                                            {cvs.map((item, i) => {\n                                                return <li className=\"select-option\" key={item.id} onClick={()=> selectOption(item.name)}>{item.name}</li>\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"testing-form-item testing-form-file\">\n                                    <label htmlFor=\"inputEmailFile\" className=\"testing-file upload-file\">\n                                        <img src=\"/img/icon-clip.svg\" alt=\"add\" />\n                                        <p>{data.ButtonUpload}</p>\n                                        <input placeholder={data.InputPlaceholder} id=\"inputEmailFile\" type=\"file\" />\n                                    </label>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"button-block\">\n                        <button className=\"button-blue\" id=\"buttonConfirmTest\"  onClick={()=>{openModal(\"Wait\"); setStyle(0)}}><p>{data.ButtonPost}</p></button>\n                        <label className=\"desc-label desc-label-wide\">{data.ButtonLabelPost}</label>\n                    </div>\n                </div>\n                    \n                 )\n            }\n            \n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\n\nconst DAYS_IN_WEEK = 7;\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst WEEK_DAYS_FROM_MONDAY = [6, 0, 1, 2, 3, 4, 5];\n\nconst areEqual = (a, b) => {\n    return (!a || !b) ? false : (\n        a.getFullYear() === b.getFullYear() &&\n        a.getMonth() === b.getMonth() &&\n        a.getDate() === b.getDate()\n    );\n}\n\nconst isLeapYear = (year) => {\n    return !((year % 4) || (!(year % 100) && (year % 400)));\n}\n\nconst getDaysInMonth = (date) => {\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const daysInMonth = DAYS_IN_MONTH[month];\n    \n    if (isLeapYear(year) && month === 1) {\n        return daysInMonth + 1;\n    } else {\n        return daysInMonth;\n    }\n}\n\nconst getDayOfWeek = (date) => {\n    return WEEK_DAYS_FROM_MONDAY[date.getDay()];\n}\n\nconst getMonthData = (year, month) => {\n    const result = [];\n    const date = new Date(year, month);\n    const daysInMonth = getDaysInMonth(date);\n    const monthStartsOn = getDayOfWeek(date);\n    let day = 1;\n\n    for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n        result[i] = [];\n        \n        for (let j = 0; j < DAYS_IN_WEEK; j++) {\n            if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n                result[i][j] = undefined;\n            } else {\n                result[i][j] = new Date(year, month, day++);\n            }\n        }\n    }\n    return result;\n}\n\n\nexport function Calendar () {\n\n    const [date, setDate] = useState(new Date());\n    const [currentDate, setCurrentDate] = useState(new Date());\n    //const [selectedDate, setSelectedDate] = useState(null);\n    const [yearSelect, setYearSelect] = useState(null);\n    const [monthSelect, setMonthSelect] = useState(null);\n \n\n    const handlePrevMonthButtonClick = () => {\n        const newdate = new Date(date.getFullYear(), date.getMonth() - 1);\n        setDate(newdate);\n    };\n\n    const handleNextMonthButtonClick = () => {\n        const newdate = new Date(date.getFullYear(), date.getMonth() + 1);\n        setDate(newdate);\n    };\n\n    const handleSelectChange = () => {\n        const year = yearSelect.value;\n        const month = monthSelect.value;\n        const newdate = new Date(year, month);\n        setDate(newdate);\n    };\n\n    const handleDayClick = newdate => {\n        setDate(newdate);\n    };\n\n    const years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030]\n    const monthNames = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n    const weekDayNames = ['Пн', 'Вт', 'Ср', 'Чт' , 'Пт', 'Сб', 'Вс']\n    const monthData = getMonthData(date.getFullYear(), date.getMonth());\n    \n//<button onClick={handlePrevMonthButtonClick}>{'<'}</button>\n//<button onClick={handleNextMonthButtonClick}>{'>'}</button>\n    return (\n        <div className=\"calendar\">\n            <p className=\"hidden\">{date && <p>Выбранная дата: {date.toLocaleDateString()}</p>}</p>\n            <header>\n                \n                <img className=\"arrow-select-left\" src=\"/img/icon-arrow.svg\" alt=\"arrow\" onClick={handlePrevMonthButtonClick} />\n                <h3>{monthNames[date.getMonth()]}</h3>\n                \n                <select\n                    ref={element => setMonthSelect(element)}\n                    value={date.getMonth()}\n                    onChange={handleSelectChange}\n                    className=\"hidden\"\n                >\n                    {monthNames.map((name, index) =>\n                        <option key={name} value={index}>{name}</option>\n                    )}\n                </select>\n\n                <select\n                    ref={element => setYearSelect(element)}\n                    value={date.getFullYear()}\n                    onChange={handleSelectChange}\n                    className=\"hidden\"\n                >\n                    {years.map(year =>\n                        <option key={year} value={year}>{year}</option> \n                    )}\n                    </select>\n                <img className=\"arrow-select-right\" src=\"/img/icon-arrow.svg\" alt=\"arrow\" onClick={handleNextMonthButtonClick} />\n                \n            </header>\n            <table>\n                <thead>\n                    <tr>\n                        {weekDayNames.map(name =>\n                            <th key={name}>{name}</th>    \n                        )}\n                    </tr>\n                </thead>\n                <tbody>\n                    {monthData.map((week, index) =>\n                        <tr key={index} className=\"week\">\n                            {week.map((newdate, index) => newdate ?\n                                <td\n                                    key={index}\n                                    className={classnames('day', {\n                                        'today': areEqual(newdate, currentDate),\n                                        'selected': areEqual(newdate, date)\n                                    })}\n                                    onClick={() => handleDayClick(newdate)}\n                                >{newdate.getDate()}</td>\n                                :\n                                <td key={index} />\n                            )}\n                        </tr> \n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\n\ninterface Model {\n    placeholder: string|null;\n    data: {\n        id: string|number;\n        name: string|number;\n    }[];\n}\n\nexport function Dropdown({ placeholder, data }: Model) {\n\n    const [dropdown, setDropdown] = useState(false);\n    const [dropoption, setDropoption] = useState(\"\");\n    const container = React.useRef<HTMLUListElement>(null);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n    const [options, setOptions] = useState([...data]);\n    const placeholderName = !!placeholder ? placeholder : data[0].name;\n\n    useEffect(() => {\n        function mousedownEvent(event: any) {\n          if (container.current && !container.current.contains(event.target)) {\n            setDropdown(false);\n          }\n        }\n        document.addEventListener('mousedown', mousedownEvent)\n        return () => {\n          document.removeEventListener('mousedown', mousedownEvent)\n        }\n    }, [])\n    \n    function toggleOptions(e?: any):void {\n        if (dropdown == false) {\n            setDropdown(true);\n        }\n    }\n    function selectOption(value: string):void {\n        setDropoption(value);\n        setSelectedValue(value);\n        setDropdown(false);\n    }\n\n    return (\n\n        <div className=\"dropdown-container\">\n            <input name=\"select_value\" type=\"hidden\" id=\"selectedValue\" value={selectedValue} />\n            <div className=\"display-value\" id=\"displayValue\" onClick={toggleOptions}>\n                <p className=\"value-text\" id=\"valueText\">{dropoption?dropoption:placeholderName}</p>\n                <img className=\"footer-logo\" src=\"/img/icon-chevron.svg\" alt=\"arrow\" />\n            </div>\n            <ul tabIndex={0} className={\"select-container \" + (!!dropdown ? \"\" : \"hidden\") } id=\"selectContainer\" ref={container}>\n                {options.map((item, i) => {\n                    return <li className=\"select-option\" key={item.id} onClick={()=> selectOption(item.name.toString())}>{item.name}</li>\n                })}\n            </ul>\n        </div>\n\n    )\n}","//import { useState } from 'react';\nimport { Calendar } from '../screens/calendar.js';\nimport { Dropdown } from '../screens/dropdown';\n\ninterface Model {\n    data: {\n        [key: string]: string;\n    };\n}\n\nexport function Schedule({ data }: Model) {\n\n    const timeSlots = [10, 12, 14, 16];\n\n    return (\n        <div className=\"main-page schedule\">\n            <div>\n                <h1>{data.Heading}</h1>\n                <div className=\"schedule-container\">\n                    <div className=\"schedule-calendar\">\n\n                        <label className=\"schedule-input\">{data.SelectDay}</label>\n                        <Calendar />\n                        <div className=\"schedule-interactive\">\n                            <div className=\"schedule-interactive-item-1\">\n                                <label className=\"schedule-input\">{data.SelectTime}</label>\n                                <form className=\"schedule-timepick\">\n                                    {timeSlots.map((item, i) => { \n                                        return <label htmlFor={\"timepick-\"+item}>{`${data.From} ${item} ${data.Until} ${item+2}`}<input type=\"radio\" id={\"timepick-\"+item} name=\"timepick\" /></label>\n                                    })}\n                                </form>\n                            </div>\n                            <div className=\"schedule-interactive-item-2\">\n                                <label className=\"schedule-input\">{data.SelectPersonal}</label>\n                                <div className=\"schedule-timeoffer\">\n                                    <Dropdown data={timeSlots.map((item, i)=> {\n                                        return {id: i, name: `${data.From} ${item}:00`}\n                                        })} placeholder={null} />\n                                    <Dropdown data={timeSlots.map((item, i)=> {\n                                        return {id: i, name: `${data.Until} ${item+2}:00`}\n                                        })} placeholder={null} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"schedule-form\">\n                        <label className=\"schedule-input\">{data.InputNameLabel}<span>*</span></label>\n                        <input placeholder={data.InputNamePlaceholder} id=\"inputScheduleName\" type=\"text\" />\n                        <label className=\"schedule-input\">{data.InputMessengersLabel} <strong>Skype</strong>:</label>\n                        <input placeholder={data.InputSkypePlaceholder} id=\"inputScheduleSkype\" type=\"text\" />\n                        <label className=\"schedule-input\">{data.InputMessengersLabel} <strong>Zoom</strong>:</label>\n                        <input placeholder={data.InputZoomPlaceholder} id=\"inputScheduleZoom\" type=\"text\" />\n                        <label className=\"schedule-input\">{data.InputOthersLabel}</label>\n                        <input placeholder={data.InputOthersPlaceholder} id=\"inputScheduleOthers\" type=\"text\" />    \n                    </div>\n                </div>\n                <div className=\"button-block\">\n\t\t\t\t    <button className=\"button-blue\" id=\"buttonConfirmDate\"><p>{data.Button}</p></button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n","\ninterface Model {\n    data: {\n        [key: string]: string;\n    },\n    onClose: any;\n}\n\nexport function Feedback({ data, onClose }: Model) {\n    return (\n        <div className=\"feedback\">\n            <h1>{data.Heading}</h1>\n            <label htmlFor=\"inputNameFeedback\">{data.NameLabel}<span>*</span></label>\n            <input placeholder={data.NamePlaceholder} id=\"inputNameFeedback\" type=\"text\" required/>\n            <label htmlFor=\"inputEmailFeedback\">{data.EmailLabel}<span>*</span></label>\n            <input placeholder={data.EmailPlaceholder} id=\"inputEmailFeedback\" type=\"text\" required/>\n            <label htmlFor=\"inputQuestionFeedback\">{data.QuestionLabel}<span>*</span></label>\n            <textarea placeholder={data.QuestionPlaceholder} id=\"inputQuestionFeedback\" required/>\n            <div className=\"button-block\">\n                <button className=\"button-blue\" id=\"buttonConfirmTest\" onClick={(()=>onClose(\"\"))}><p>{data.Button}</p></button>\n                <label htmlFor=\"buttonConfirmTest\" className=\"button-label\" ><span>*</span>{data.ButtonLabel}</label>\n            </div>\n        </div>\n    );\n};\n","\ninterface Model {\n    data: {\n        [key: string]: string;\n    },\n    onClose: any;\n}\n\nexport function Sent({ data, onClose }: Model) {\n    return (\n        <div className=\"sent\">\n            <img src=\"/img/icon-done.svg\" alt=\"done\" />\n            <h1>{data.Heading}</h1>\n            <p>{data.Paragraph1}</p>\n        </div>\n    );\n};\n","\ninterface Model {\n    data: {\n        [key: string]: string;\n    },\n    onClose: any;\n}\n\nexport function Wait({ data, onClose }: Model) {\n    return (\n        <div className=\"wait\">\n            <img src=\"/img/icon-wait.svg\" alt=\"wait\" />\n            <h1>{data.Heading}</h1>\n            <p>{data.Paragraph1}</p><br />\n            <p>{data.Paragraph2}</p>\n        </div>\n    );\n};\n","import { Feedback } from \"../screens/feedback\";\nimport { Sent } from \"../screens/sent\";\nimport { Wait } from \"../screens/wait\";\n\nimport PropTypes from \"prop-types\"; \nimport ReactDOM, { createPortal } from \"react-dom\";\nimport { useEffect, useState } from \"react\";\nimport React, { Component } from \"react\";\n\ninterface Model {\n    data: {\n        [key: string]: string;\n    }[];\n}\n\n\nexport default function Modal({data, show, onClose}:any) {\n    return (\n      <div className={\"modal-back \"+(!!show?\"\":\"hidden\")} onClick={(()=>onClose(\"\"))}>\n        <ModalType\n            data={data}\n            label={show}\n            onClose={onClose}\n        />\n      </div>\n    );\n  }\n\ninterface selectModal {\n    data: {\n        [key: string]: {\n            [key: string]: string;\n        };\n    },\n    label: string,\n    onClose: any;\n}\n\nconst chooseModal = ([label, data, onClose]: any) => {\n    switch (label) {\n        case \"Feedback\": {\n            return <Feedback data={data.Feedback} onClose={onClose}/>\n        }\n        case \"Sent\": {\n            return <Sent data={data.Sent} onClose={onClose}/>\n        }\n        case \"Wait\": {\n            return <Wait data={data.Wait} onClose={onClose}/>\n        }\n        default: {\n            return <div></div>\n        }\n    }\n}\nfunction ModalType({data, label, onClose}: selectModal) {\n    const ModalType = label;\n    const handleClickStop = (e: any) => {\n        e.stopPropagation();\n    }\n   \n    return (\n      <div className=\"modal-display\" onClick={handleClickStop}>\n          {chooseModal([label, data, onClose])}\n      </div>\n    );\n  }\n\n\n\n\n//export const Modal: React.FC<Component> = data => {\n//\n//    return (\n//        <div className=\"modal-back\">\n//            <Feedback data={data[0]} />\n//            <Sent data={data[1]} />\n//            <Wait data={data[2]} />\n//        </div>\n//    );\n//};\n","import React, { FC, ReactElement, useState, useEffect } from 'react';\nimport { Announce } from \"../pages/announce\";\nimport { Vacancies } from \"../pages/vacancies\";\nimport { Position } from \"../pages/position\";\nimport { Testing } from \"../pages/testing\";\nimport { Schedule} from \"../pages/schedule\";\nimport Modal from \"../pages/modal\";\n\ntype Model = {\n    data: {\n        [key: string]: any;\n    };\n}\n\n\nexport function Main({ data }: Model) {\n    const [pageData, setPageData] = useState(data);\n\n    const [show, setShow] = useState(\"\");\n\n    const showModal = (modalName: string) => {\n        if (modalName.length > 0) {\n            document.body.classList.add(\"modal-open\");\n        } else {\n            document.body.classList.remove(\"modal-open\");\n        }\n        setShow(modalName);\n    };\n    const hideModal = () => {\n        setShow(\"\");\n    };\n\n    return (\n        <div className=\"main\">\n            <Announce data={pageData.Announce}/>\n            <Vacancies data={pageData.Vacancies} openModal={showModal}/>\n            <Position data={pageData.Position}/>\n            <Testing data={pageData.Testing} openModal={showModal}/>\n            <Schedule data={pageData.Schedule}/>\n            <Modal data={{Feedback: pageData.Feedback, Sent: pageData.Sent, Wait: pageData.Wait}} show={show} onClose={showModal}/>\n        </div>\n    );\n    //data={[pageData.Feedback, pageData.Sent, pageData.Wait]}\n};\n","import { useState, MouseEvent } from 'react';\n\ninterface Model{\n    data: {\n        [key: string]: any;\n    }[]\n}\n\nexport function Header({ data }: Model) {\n    const languages: string[] = Object.keys(data[1]);\n    const [lang, setLang] = useState(0);\n\n    function switchLang(event: MouseEvent) {\n        let iteration: number = lang+1;\n        if (iteration >= languages.length) {iteration = 0}\n        setLang(iteration);\n    }\n\n    return (\n        <div className=\"header\">\n            <div className=\"header-wrapper\">\n                <div className=\"logotype\">\n                    <img src=\"/img/itexpert-logo-black.svg\" alt=\"logo\" />\n                    <h3>{data[0].Heading}</h3>\n                </div>\n                <div className=\"language\" onClick={switchLang}>\n                    <p>{languages[lang]}</p>\n                    <img src=\"/img/icon-arrow.svg\" alt=\"arrow\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React, { FC, ReactElement, useState, useEffect } from 'react';\n//import { useState, useEffect } from 'react';\nimport './App.scss';\nimport JsonData from \"./data/data.json\";\n\nimport { Footer } from \"./components/footer/footer\";\nimport { Main } from \"./components/main/main\";\nimport { Header } from \"./components/header/header\";\n\n\n//interface JsonRead {\n//  Header: object\n//}\n\nconst App = () => {\n  const [pageData, setPageData] = useState(JsonData[0]);\n\n  //useEffect(() => {\n  //  //setPageData(JsonData[0]);\n  //}, []);\n\n  return (\n    <div>\n      <Header data={[pageData.Header, pageData.Languages]} />\n      <Main data={pageData} />\n      <div id=\"modal\"></div>\n      <Footer data={pageData.Footer} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}